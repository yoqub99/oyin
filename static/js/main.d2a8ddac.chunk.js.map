{"version":3,"sources":["logo.svg","TicTacToe/TicTacToe.js","App.js","reportWebVitals.js","index.js"],"names":["TicTacToe","useState","turn","setTurn","Array","fill","cells","setCells","winner","setWinner","handleClick","num","squares","combos","across","down","diagnol","combo","forEach","pattern","checkForWinner","alert","Cell","onClick","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAAe,I,kCCqGIA,EAlGD,WACd,MAAoBC,mBAAS,KAA7B,mBAAMC,EAAN,KAAWC,EAAX,KACA,EAAsBF,mBAASG,MAAM,GAAGC,KAAK,KAA7C,mBAAMC,EAAN,KAAYC,EAAZ,KACA,EAAyBN,qBAAzB,mBAAMO,EAAN,KAAaC,EAAb,KAmCMC,EAAc,SAACC,GACjB,GAAmB,KAAfL,EAAMK,GAAV,CAIA,IAAIC,EAAO,YAAON,GAEL,MAATJ,GACAU,EAAQD,GAAK,IACbR,EAAQ,OAERS,EAAQD,GAAK,IACbR,EAAQ,MA9CO,SAACS,GACpB,IAAIC,EAAQ,CACRC,OAAO,CACH,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,KAAK,CACD,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEXC,QAAQ,CACJ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,KAGvB,IAAK,IAAIC,KAASJ,EACdA,EAAOI,GAAOC,SAAQ,SAACC,GAES,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KACQ,KAAxBP,EAAQO,EAAQ,KAGVP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KAC9CP,EAAQO,EAAQ,MAAQP,EAAQO,EAAQ,KAExCV,EAAUG,EAAQO,EAAQ,QAqB9BC,CAAeR,GACfL,EAASK,QAdLS,MAAM,oBAqBRC,EAAO,SAAC,GAAY,IAAVX,EAAS,EAATA,IACZ,OAAO,oBAAIY,QAAS,kBAAKb,EAAYC,IAA9B,SAAqCL,EAAMK,MAEtD,OACI,sBAAKa,UAAU,YAAf,UACI,gCACI,0CACUtB,EACN,+BACG,cAACoB,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,OAEd,+BACG,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,OAEd,+BACG,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,IACX,cAACW,EAAD,CAAMX,IAAK,YAIrBH,GACG,qCACA,8BAAIA,EAAJ,oBACA,wBAAQe,QAAS,kBAhCzBd,EAAU,WACVF,EAASH,MAAM,GAAGC,KAAK,MA+Bf,+BChFDoB,MARf,WACE,OACE,qBAAKD,UAAU,MAAf,SACC,cAAC,EAAD,OCKUE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d2a8ddac.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from 'react';\r\nimport './TicTacToe.css';\r\n\r\nconst TicTacToe = () => {\r\n    const[turn,setTurn]=useState('x');\r\n    const[cells,setCells]=useState(Array(9).fill(''));\r\n    const[winner,setWinner]= useState();\r\n    const checkForWinner = (squares)=>{\r\n        let combos ={\r\n            across:[\r\n                [0, 1, 2],\r\n                [3, 4, 5],\r\n                [6, 7, 8],\r\n            ],\r\n            down:[\r\n                [0, 3, 6],\r\n                [1, 4, 7],\r\n                [2, 5, 8],\r\n            ],\r\n            diagnol:[\r\n                [0, 4, 8],\r\n                [2, 4, 6],\r\n            ]\r\n        }\r\nfor (let combo in combos) {\r\n    combos[combo].forEach((pattern) => {\r\n        if (\r\n            squares[pattern[0]] === '' ||\r\n            squares[pattern[1]] === '' ||\r\n            squares[pattern[2]] === ''\r\n        ){\r\n            //do nothing\r\n        } else if(squares[pattern[0]] === squares[pattern[1]] && \r\n            squares[pattern[1]] === squares[pattern[2]]\r\n        ){\r\n            setWinner(squares[pattern[0]])\r\n        }\r\n    });\r\n}\r\n};\r\n\r\n    const handleClick = (num)=>{\r\n        if (cells[num] !== '') {\r\n            alert('already clicked');\r\n            return;\r\n        }\r\n        let squares = [...cells];\r\n\r\n        if (turn === 'x') {\r\n            squares[num]='x';\r\n            setTurn('0');\r\n        }else{\r\n            squares[num]='o';\r\n            setTurn('x');\r\n        }\r\n\r\n        checkForWinner(squares);\r\n        setCells(squares);\r\n    };\r\n    const handleRestart = () => {\r\n        setWinner(null);\r\n        setCells(Array(9).fill(''));\r\n    };\r\n\r\n    const Cell = ({ num }) =>{\r\n        return <td onClick={()=> handleClick(num)}>{cells[num]}</td>\r\n    };\r\n    return (\r\n        <div className='container'>\r\n            <table>\r\n                <tbody>\r\n                    Turn:{turn}\r\n                    <tr>\r\n                       <Cell num={0}/>\r\n                       <Cell num={1}/>\r\n                       <Cell num={2}/>\r\n                    </tr>\r\n                    <tr>\r\n                       <Cell num={3}/>\r\n                       <Cell num={4}/>\r\n                       <Cell num={5}/>\r\n                    </tr>\r\n                    <tr>\r\n                       <Cell num={6}/>\r\n                       <Cell num={7}/>\r\n                       <Cell num={8}/>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n            {winner &&(\r\n                <>\r\n                <p>{winner}is the winner!</p>\r\n                <button onClick={() => handleRestart()}>Play Again</button>\r\n                </>\r\n            )\r\n\r\n            }\r\n        </div>\r\n        )\r\n    }\r\n    \r\n    export default TicTacToe\r\n    ","import logo from './logo.svg';\nimport './App.css';\nimport TicTacToe from './TicTacToe/TicTacToe';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n     <TicTacToe/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}